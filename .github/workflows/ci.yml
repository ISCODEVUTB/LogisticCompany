name: Python CI with SonarCloud
on:
  push:
    branches: [ "main", "Amaury" ]
  pull_request:
    branches: [ "main", "Amaury" ]
jobs:
  build:
    name: Test and Analyze
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      with:
        fetch-depth: 0
        
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.11"

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest pytest-cov pytest-asyncio
    
    - name: Create __init__.py files for Python packages
      run: |
        find . -type d -not -path "*/__pycache__*" -not -path "*/\.*" | grep -E '/(app|test)($|/)' | xargs -I {} touch {}/__init__.py
    
    - name: Create conftest.py for pytest
      run: |
        cat > conftest.py << 'EOF'
        import sys
        import os
        root_dir = os.path.abspath(os.path.dirname(__file__))
        sys.path.insert(0, root_dir)
        sys.path.insert(0, os.path.join(root_dir, "routing_service"))
        sys.path.insert(0, os.path.join(root_dir, "driver_service"))
        sys.path.insert(0, os.path.join(root_dir, "shipping_order_service"))
        sys.path.insert(0, os.path.join(root_dir, "tracking_service"))
        EOF
        
    - name: Run tests with coverage
      run: |
        export PYTHONPATH=$PYTHONPATH:$(pwd)
        python -m pytest --cov=. --cov-report=xml

       
    - name: Check coverage file
      run: ls -l coverage.xml

    - name: SonarCloud Scan
      uses: SonarSource/sonarcloud-github-action@v2
      with:
        projectBaseDir: .
        args: >
          -Dsonar.python.coverage.reportPaths=coverage.xml
          -Dsonar.python.xunit.reportPath=test-results.xml
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        SONAR_PROJECT_KEY: ${{ secrets.PROJECT_KEY }}
        SONAR_ORGANIZATION: ${{ secrets.ORGANIZATION }}

    - name: Build Docker images
      run: docker-compose build

    - name: Run Docker containers
      run: docker-compose up -d

    - name: Wait for services to be healthy
      run: sleep 10