name: Flutter Tests

on:
  push:
    branches: [ main ]
    paths:
      - 'front-end/logistic_app/**'
  pull_request:
    branches: [ main ]
    paths:
      - 'front-end/logistic_app/**'

jobs:
  test:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: front-end/logistic_app

    steps:
      - uses: actions/checkout@v3
      
      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.10.0'
          channel: 'stable'
      
      # Añadir este paso para corregir el problema de embedding
      - name: Fix Android Embedding Warning
        run: |
          # Verificar que el AndroidManifest.xml tiene la configuración correcta
          if ! grep -q "flutterEmbedding.*2" android/app/src/main/AndroidManifest.xml; then
            # Si no existe, añadir la meta-data para embedding V2
            sed -i '/<\/application>/i \        <meta-data android:name="flutterEmbedding" android:value="2" />' android/app/src/main/AndroidManifest.xml
          fi
          
          # Verificar que MainActivity.kt usa FlutterActivity
          MAIN_ACTIVITY_PATH="android/app/src/main/kotlin/com/example/logistic_app/MainActivity.kt"
          if [ -f "$MAIN_ACTIVITY_PATH" ]; then
            if ! grep -q "FlutterActivity" "$MAIN_ACTIVITY_PATH"; then
              # Si no usa FlutterActivity, reemplazar con la implementación correcta
              mkdir -p $(dirname "$MAIN_ACTIVITY_PATH")
              cat > "$MAIN_ACTIVITY_PATH" << 'EOF'
          package com.example.logistic_app
          import io.flutter.embedding.android.FlutterActivity
          class MainActivity: FlutterActivity() {
          }
          EOF
                      fi
                    fi
      
      - name: Clean and Update Dependencies
        run: |
          # Verificar contenido actual del pubspec.yaml
          cat pubspec.yaml
          
          # Limpiar caché y actualizar dependencias
          flutter pub cache clean
          rm -f pubspec.lock
          flutter pub get
      
      - name: Analyze project
        run: flutter analyze
      
      # Modificar este paso para ignorar la advertencia si persiste
      - name: Run tests with coverage
        run: |
          # Opción 1: Ignorar advertencias como errores
          flutter test --coverage --no-warning-as-error || flutter test --coverage
      
      - name: Generate Dart Analysis Report
        run: |
          dart analyze --format=json > dart-analysis-report.json || true
      
      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_PROJECT_KEY:  ${{ secrets.PROJECT_KEY }}
          SONAR_ORGANIZATION:  ${{ secrets.ORGANIZATION }}
